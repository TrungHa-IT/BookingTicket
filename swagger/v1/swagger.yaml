---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/login":
    post:
      summary: Login to get token
      tags:
      - Authentication
      parameters: []
      responses:
        '200':
          description: Login successfull
        '401':
          description: Email or Password incorrect
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: a@gmail.com
                password:
                  type: string
                  example: '123456'
              required:
              - email
              - password
  "/api/v1/register":
    post:
      summary: Register and get JWT token
      tags:
      - Authentication
      parameters: []
      responses:
        '201':
          description: Register successfull
        '422':
          description: Data incorrect
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                fullname:
                  type: string
                  example: Nguyen Van B
                email:
                  type: string
                  example: b@gmail.com
                phone:
                  type: string
                  example: '0901234567'
                password_hash:
                  type: string
                  example: '123456'
                role:
                  type: integer
                  example: 0
              required:
              - fullname
              - email
              - phone
              - password_hash
              - role
  "/api/v1/booking_seats":
    get:
      summary: List booking seats
      tags:
      - BookingSeats
      parameters:
      - name: booking_id
        in: query
        schema:
          type: integer
      - name: show_time_detail_id
        in: query
        schema:
          type: integer
      - name: hold_still
        in: query
        schema:
          type: boolean
      - name: page
        in: query
        schema:
          type: integer
      - name: per_page
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      responses:
        '200':
          description: booking seats listed
    post:
      summary: Create a booking seat
      tags:
      - BookingSeats
      parameters: []
      responses:
        '201':
          description: booking seat created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                booking_id:
                  type: integer
                seat_id:
                  type: integer
                show_time_detail_id:
                  type: integer
                hold_still:
                  type: boolean
              required:
              - booking_id
              - seat_id
              - show_time_detail_id
              - hold_still
  "/api/v1/booking_seats/{id}":
    get:
      summary: Retrieve a booking seat
      tags:
      - BookingSeats
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: booking seat found
        '404':
          description: booking seat not found
    put:
      summary: Update a booking seat
      tags:
      - BookingSeats
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: booking seat updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                hold_still:
                  type: boolean
    delete:
      summary: Delete a booking seat
      tags:
      - BookingSeats
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: booking seat deleted
  "/api/v1/bookings":
    get:
      summary: List bookings
      tags:
      - Bookings
      parameters:
      - name: user_id
        in: query
        schema:
          type: integer
      - name: show_id
        in: query
        schema:
          type: integer
      - name: q
        in: query
        schema:
          type: string
      - name: page
        in: query
        schema:
          type: integer
      - name: per_page
        in: query
        schema:
          type: integer
      responses:
        '200':
          description: bookings listed
    post:
      summary: Create booking
      tags:
      - Bookings
      parameters: []
      responses:
        '201':
          description: booking created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                show_id:
                  type: integer
                booking_time:
                  type: string
                  format: date-time
                total_amount:
                  type: number
              required:
              - user_id
              - show_id
              - booking_time
              - total_amount
  "/api/v1/cinemas":
    get:
      summary: List cinemas
      tags:
      - Cinemas
      parameters:
      - name: q
        in: query
        schema:
          type: string
      - name: sort
        in: query
        schema:
          type: string
      - name: page
        in: query
        schema:
          type: integer
      - name: per_page
        in: query
        schema:
          type: integer
      responses:
        '200':
          description: cinemas listed
    post:
      summary: Create cinema
      tags:
      - Cinemas
      parameters: []
      responses:
        '201':
          description: cinema created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                address:
                  type: string
              required:
              - name
              - address
  "/api/v1/cinemas/{id}":
    get:
      summary: Retrieve cinema
      tags:
      - Cinemas
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: cinema found
    patch:
      summary: Update cinema
      tags:
      - Cinemas
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: cinema updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                address:
                  type: string
    delete:
      summary: Delete cinema
      tags:
      - Cinemas
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: cinema deleted
  "/api/v1/genres":
    get:
      summary: List genres
      tags:
      - Genres
      parameters:
      - name: q
        in: query
        schema:
          type: string
      - name: sort
        in: query
        schema:
          type: string
      - name: page
        in: query
        schema:
          type: integer
      - name: per_page
        in: query
        schema:
          type: integer
      responses:
        '200':
          description: genres listed
    post:
      summary: Create genre
      tags:
      - Genres
      parameters: []
      responses:
        '201':
          description: genre created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                genre_name:
                  type: string
                genre_description:
                  type: string
              required:
              - genre_name
              - genre_description
  "/api/v1/genres/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: Show genre
      tags:
      - Genres
      responses:
        '200':
          description: genre found
        '404':
          description: genre not found
    put:
      summary: Update genre
      tags:
      - Genres
      parameters: []
      responses:
        '200':
          description: genre updated
        '422':
          description: invalid update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                genre_name:
                  type: string
                genre_description:
                  type: string
    delete:
      summary: Delete genre
      tags:
      - Genres
      responses:
        '204':
          description: genre deleted
        '404':
          description: genre not found
  "/api/v1/movies":
    get:
      summary: list movies
      tags:
      - Movies
      parameters:
      - name: q
        in: query
        description: Search by title
        schema:
          type: string
      - name: status
        in: query
        description: Filter by status
        schema:
          type: string
      - name: limit_age
        in: query
        description: Filter by age
        schema:
          type: integer
      responses:
        '200':
          description: successful
    post:
      summary: create movie
      tags:
      - Movies
      parameters: []
      responses:
        '201':
          description: movie created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                duration_minutes:
                  type: integer
                status:
                  type: string
                limit_age:
                  type: integer
                screening_day:
                  type: string
                  format: date
              required:
              - title
              - duration_minutes
              - status
              - limit_age
              - screening_day
  "/api/v1/movies/{id}":
    parameters:
    - name: id
      in: path
      description: Movie ID
      required: true
      schema:
        type: integer
    get:
      summary: show movie
      tags:
      - Movies
      responses:
        '200':
          description: successful
    put:
      summary: update movie
      tags:
      - Movies
      parameters: []
      responses:
        '200':
          description: movie updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                duration_minutes:
                  type: integer
                status:
                  type: string
                limit_age:
                  type: integer
                screening_day:
                  type: string
                  format: date
    delete:
      summary: delete movie
      tags:
      - Movies
      responses:
        '204':
          description: movie deleted
  "/api/v1/payments":
    get:
      summary: list payments
      tags:
      - Payments
      parameters:
      - name: status
        in: query
        description: Filter by status
        schema:
          type: string
      - name: q
        in: query
        description: Search by user fullname
        schema:
          type: string
      - name: page
        in: query
        description: Page number
        schema:
          type: integer
      - name: per_page
        in: query
        description: Items per page
        schema:
          type: integer
      responses:
        '200':
          description: successful
    post:
      summary: create payment
      tags:
      - Payments
      parameters: []
      responses:
        '201':
          description: created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                booking_id:
                  type: integer
                payment_method:
                  type: string
                amount:
                  type: number
                payment_date:
                  type: string
                  format: date_time
                status:
                  type: string
              required:
              - booking_id
              - payment_method
              - amount
              - payment_date
              - status
  "/api/v1/payments/{id}":
    parameters:
    - name: id
      in: path
      description: payment id
      required: true
      schema:
        type: integer
    get:
      summary: show payment
      tags:
      - Payments
      responses:
        '200':
          description: successful
    put:
      summary: update payment
      tags:
      - Payments
      parameters: []
      responses:
        '200':
          description: updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
    delete:
      summary: delete payment
      tags:
      - Payments
      responses:
        '204':
          description: no content
  "/api/v1/rooms":
    get:
      summary: List rooms
      tags:
      - Rooms
      parameters:
      - name: cinema_id
        in: query
        schema:
          type: integer
      - name: q
        in: query
        schema:
          type: string
      - name: sort
        in: query
        schema:
          type: string
      - name: page
        in: query
        schema:
          type: integer
      - name: per_page
        in: query
        schema:
          type: integer
      responses:
        '200':
          description: rooms listed
    post:
      summary: Create room
      tags:
      - Rooms
      parameters: []
      responses:
        '201':
          description: room created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                cinema_id:
                  type: integer
                name:
                  type: string
                seat_capacity:
                  type: integer
              required:
              - cinema_id
              - name
              - seat_capacity
  "/api/v1/rooms/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: Show room
      tags:
      - Rooms
      responses:
        '200':
          description: room found
        '404':
          description: room not found
    put:
      summary: Update room
      tags:
      - Rooms
      parameters: []
      responses:
        '200':
          description: room updated
        '422':
          description: invalid update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                cinema_id:
                  type: integer
                name:
                  type: string
                seat_capacity:
                  type: integer
    delete:
      summary: Delete room
      tags:
      - Rooms
      responses:
        '204':
          description: room deleted
        '404':
          description: room not found
  "/api/v1/seat_show_time_details":
    get:
      summary: List seat show time details
      tags:
      - SeatShowTimeDetails
      parameters:
      - name: show_time_detail_id
        in: query
        schema:
          type: integer
      - name: seat_id
        in: query
        schema:
          type: integer
      - name: status
        in: query
        schema:
          type: string
      - name: sort
        in: query
        schema:
          type: string
      - name: page
        in: query
        schema:
          type: integer
      - name: per_page
        in: query
        schema:
          type: integer
      responses:
        '200':
          description: seat show time details listed
    post:
      summary: Create seat show time detail
      tags:
      - SeatShowTimeDetails
      parameters: []
      responses:
        '201':
          description: seat show time detail created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                show_time_detail_id:
                  type: integer
                seat_id:
                  type: integer
                status:
                  type: string
                  enum:
                  - Available
                  - Booked
                  - Held
              required:
              - show_time_detail_id
              - seat_id
              - status
  "/api/v1/seat_show_time_details/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: Show seat show time detail
      tags:
      - SeatShowTimeDetails
      responses:
        '200':
          description: seat show time detail found
        '404':
          description: not found
    put:
      summary: Update seat show time detail
      tags:
      - SeatShowTimeDetails
      parameters: []
      responses:
        '200':
          description: seat show time detail updated
        '422':
          description: invalid update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum:
                  - Available
                  - Booked
                  - Held
    delete:
      summary: Delete seat show time detail
      tags:
      - SeatShowTimeDetails
      responses:
        '204':
          description: seat show time detail deleted
        '404':
          description: not found
  "/api/v1/seats":
    get:
      summary: list seats
      tags:
      - Seats
      parameters:
      - name: room_id
        in: query
        description: Filter by room
        schema:
          type: integer
      responses:
        '200':
          description: successful
    post:
      summary: create seat
      tags:
      - Seats
      parameters: []
      responses:
        '201':
          description: seat created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                seat_number:
                  type: integer
                seat_row:
                  type: string
                room_id:
                  type: integer
              required:
              - seat_number
              - seat_row
              - room_id
  "/api/v1/seats/{id}":
    parameters:
    - name: id
      in: path
      description: Seat ID
      required: true
      schema:
        type: integer
    get:
      summary: show seat
      tags:
      - Seats
      responses:
        '200':
          description: successful
    put:
      summary: update seat
      tags:
      - Seats
      parameters: []
      responses:
        '200':
          description: seat updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                seat_number:
                  type: integer
                seat_row:
                  type: string
                room_id:
                  type: integer
    delete:
      summary: delete seat
      tags:
      - Seats
      responses:
        '204':
          description: seat deleted
  "/api/v1/show_time_details":
    get:
      summary: List show time details
      tags:
      - ShowTimeDetails
      parameters:
      - name: show_id
        in: query
        schema:
          type: integer
      - name: sort
        in: query
        schema:
          type: string
      - name: page
        in: query
        schema:
          type: integer
      - name: per_page
        in: query
        schema:
          type: integer
      responses:
        '200':
          description: show_time_details listed
    post:
      summary: Create show time detail
      tags:
      - ShowTimeDetails
      parameters: []
      responses:
        '201':
          description: show_time_detail created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                show_id:
                  type: integer
                start_time:
                  type: string
                  format: date_time
                end_time:
                  type: string
                  format: date_time
              required:
              - show_id
              - start_time
              - end_time
  "/api/v1/show_time_details/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: Show a show time detail
      tags:
      - ShowTimeDetails
      responses:
        '200':
          description: show_time_detail found
        '404':
          description: not found
    put:
      summary: Update a show time detail
      tags:
      - ShowTimeDetails
      parameters: []
      responses:
        '200':
          description: show_time_detail updated
        '422':
          description: invalid update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                start_time:
                  type: string
                  format: date_time
                end_time:
                  type: string
                  format: date_time
    delete:
      summary: Delete a show time detail
      tags:
      - ShowTimeDetails
      responses:
        '204':
          description: show_time_detail deleted
        '404':
          description: not found
  "/api/v1/shows":
    get:
      summary: List shows
      tags:
      - Shows
      parameters:
      - name: movie_id
        in: query
        schema:
          type: integer
      - name: cinema_id
        in: query
        schema:
          type: integer
      - name: room_id
        in: query
        schema:
          type: integer
      - name: q
        in: query
        schema:
          type: string
      - name: sort
        in: query
        schema:
          type: string
      - name: page
        in: query
        schema:
          type: integer
      - name: per_page
        in: query
        schema:
          type: integer
      responses:
        '200':
          description: shows listed
    post:
      summary: Create show
      tags:
      - Shows
      parameters: []
      responses:
        '201':
          description: show created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                movie_id:
                  type: integer
                room_id:
                  type: integer
                cinema_id:
                  type: integer
                show_day:
                  type: string
                  format: date
                ticket_price:
                  type: number
              required:
              - movie_id
              - room_id
              - cinema_id
              - show_day
              - ticket_price
  "/api/v1/shows/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: Show a show
      tags:
      - Shows
      responses:
        '200':
          description: show found
        '404':
          description: not found
    put:
      summary: Update a show
      tags:
      - Shows
      parameters: []
      responses:
        '200':
          description: show updated
        '422':
          description: invalid update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                show_day:
                  type: string
                  format: date
                ticket_price:
                  type: number
    delete:
      summary: Delete a show
      tags:
      - Shows
      responses:
        '204':
          description: show deleted
        '404':
          description: not found
  "/api/v1/users":
    get:
      summary: List users
      tags:
      - Users
      parameters:
      - name: q
        in: query
        description: Search keyword
        schema:
          type: string
      - name: role
        in: query
        description: Filter by role
        schema:
          type: integer
      - name: page
        in: query
        description: Page number
        schema:
          type: integer
      - name: per_page
        in: query
        description: Items per page
        schema:
          type: integer
      - name: sort
        in: query
        description: Sort field, prefix with - for desc
        schema:
          type: string
      responses:
        '200':
          description: users found
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        fullname:
                          type: string
                        email:
                          type: string
                        phone:
                          type: string
                        role:
                          type: integer
                        created_at:
                          type: string
                          format: date-time
                  meta:
                    type: object
    post:
      summary: Create user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: user created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                fullname:
                  type: string
                email:
                  type: string
                phone:
                  type: string
                password:
                  type: string
                password_confirmation:
                  type: string
                role:
                  type: integer
              required:
              - fullname
              - email
              - phone
              - password
              - password_confirmation
  "/api/v1/users/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Show user
      tags:
      - Users
      responses:
        '200':
          description: user found
        '404':
          description: user not found
    put:
      summary: Update user
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: user updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                fullname:
                  type: string
                phone:
                  type: string
                role:
                  type: integer
    delete:
      summary: Delete user
      tags:
      - Users
      responses:
        '204':
          description: user deleted
servers:
- url: http://localhost:3000
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
- bearerAuth: []
